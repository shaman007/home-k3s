apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: matrix
  name: matrix
  labels:
    app: matrix
    storage.k8s.io/name: nfs
    storage.k8s.io/part-of: kubernetes-complete-reference
    storage.k8s.io/created-by: shaman007
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  namespace: matrix
  name: matrix
  labels:
    tier: backend
spec:
  selector:
    app: matrix
    tier: backend
  ports:
    - protocol: TCP
      port: 6167
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: matrix
  name: matrix-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: '$http_origin'
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
spec:
  tls:
    - hosts:
        - matrix.andreybondarenko.com
      secretName: letsencrypt-matrix-prod
  rules:
    - host: matrix.andreybondarenko.com
      http:
        paths:
          - path: /.well-known/matrix/
            pathType: Prefix
            backend:
              service:
                name: nginx-matrix
                port:
                  number: 80
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: matrix
                port:
                  number: 6167
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: matrix
  name: matrix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: matrix
      tier: backend
  template:
    metadata:
      labels:
        app: matrix
        tier: backend
    spec:
      volumes:
        - name: matrix
          persistentVolumeClaim:
            claimName: matrix
      containers:
        - name: conduit
          image: matrixconduit/matrix-conduit:latest
          ports:
            - containerPort: 6167
          volumeMounts:
            - name: matrix
              mountPath: /var/lib/matrix-conduit/
          env:
            - name: CONDUIT_SERVER_NAME
              value: matrix.andreybondarenko.com
            - name: CONDUIT_DATABASE_BACKEND
              value: rocksdb
            - name: CONDUIT_ALLOW_REGISTRATION
              value: "false"
            - name: CONDUIT_ALLOW_FEDERATION
              value: "true"
            - name: CONDUUT_ALLOW_CHECK_FOR_UPDATES
              value: "true"
            - name: CONDUIT_MAX_REQUEST_SIZE
              value: "20000000"
            - name: CONDUIT_TRUSTED_SERVERS
              value: "[\"matrix.org\"]"
            - name: CONDUIT_MAX_CONCURRENT_REQUESTS
              value: "200"
            - name: CONDUIT_LOG
              value: "warn,rocket=off,_=off,sled=off"
          resources:
            requests:
              cpu: "10m"
              memory: "200Mi"
            limits:
              memory: "200Mi"
