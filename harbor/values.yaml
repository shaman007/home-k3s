core:
  nodeSelector:
    kubernetes.io/hostname: w386.k8s.my.lan
  resources:
    requests:
      memory: 213Mi
      cpu: 10m
    limits:
      memory: 213Mi
database:
  internal:
    nodeSelector:
      kubernetes.io/hostname: w386.k8s.my.lan
    resources:
      requests:
        memory: 250Mi
        cpu: 10m
      limits:
        memory: 250Mi
exporter:
  nodeSelector:
    kubernetes.io/hostname: w386.k8s.my.lan
jobservice:
  nodeSelector:
    kubernetes.io/hostname: w386.k8s.my.lan
  resources:
    requests:
      memory: 100Mi
      cpu: 10m
    limits:
      memory: 100Mi
nginx:
  nodeSelector:
    kubernetes.io/hostname: w386.k8s.my.lan
  resources:
    requests:
      memory: 100Mi
      cpu: 10m
    limits:
      memory: 100Mi
portal:
  nodeSelector:
    kubernetes.io/hostname: w386.k8s.my.lan
  resources:
    requests:
      memory: 100Mi
      cpu: 10m
    limits:
      memory: 100Mi
redis:
  internal:
    nodeSelector:
      kubernetes.io/hostname: w386.k8s.my.lan
    resources:
      requests:
        memory: 113Mi
        cpu: 10m
      limits:
        memory: 113Mi
registry:
    nodeSelector:
      kubernetes.io/hostname: w386.k8s.my.lan
    registry:
      nodeSelector:
        kubernetes.io/hostname: w386.k8s.my.lan
      resources:
        requests:
          memory: 100Mi
          cpu: 124m
        limits:
          memory: 100Mi
    controller:
      resources:
        requests:
          memory: 100Mi
          cpu: 10m
        limits:
          memory: 100Mi
trivy:
  nodeSelector:
    kubernetes.io/hostname: w386.k8s.my.lan
  resources:
    requests:
      memory: 401Mi
      cpu: 10m
    limits:
      memory: 401Mi
notary:
  enabled: false  # disable notary
  nodeSelector:
    kubernetes.io/hostname: w386.k8s.my.lan

persistence:
  enabled: true
  resourcePolicy: "keep"
  persistentVolumeClaim:
    registry:
      existingClaim: "harbor-registry"

externalURL: https://harbor.andreybondarenko.com
harborAdminPassword: Harbor12345

expose:
  type: ingress
  tls:
    enabled: true
    certSource: secret
    secret:
      secretName: harbor-tls   # cert-manager will fill this
  ingress:
    hosts:
      core: harbor.andreybondarenko.com
    annotations:
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    tls:
      - hosts:
          - harbor.andreybondarenko.com
        secretName: harbor-tls
