---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: nextcloud
  name: nextcloud-config
  labels:
    tier: backend
data:
  config: |
    # Set the `immutable` cache control options only for assets with a cache busting `v` argument
    map $arg_v $asset_immutable {
      "" "";
      default "immutable";
    }
    server {
      listen 80;
      index index.php index.html /index.php$request_uri;
      error_log  /var/log/nginx/error.log;
      access_log /var/log/nginx/access.log;
      root /nextcloud;
      client_max_body_size 2000M;

      gzip on;
      gzip_vary on;
      gzip_comp_level 4;
      gzip_min_length 256;
      gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
      gzip_types application/atom+xml application/javascript application/json \
        application/ld+json application/manifest+json application/rss+xml \
        application/vnd.geo+json application/vnd.ms-fontobject \
        application/wasm application/x-font-ttf \
        application/x-web-app-manifest+json \
        application/xhtml+xml application/xml font/opentype image/bmp \
        image/svg+xml image/x-icon text/cache-manifest text/css text/plain \
        text/vcard text/vnd.rim.location.xloc \
        text/vtt text/x-component text/x-cross-domain-policy;
      client_body_buffer_size 512k;
      add_header Referrer-Policy                    "no-referrer"   always;
      add_header X-Content-Type-Options             "nosniff"       always;
      add_header X-Download-Options                 "noopen"        always;
      add_header X-Frame-Options                    "SAMEORIGIN"    always;
      add_header X-Permitted-Cross-Domain-Policies  "none"          always;
      add_header X-Robots-Tag                       "noindex, nofollow"  always;
      add_header X-XSS-Protection                   "1; mode=block" always;
      fastcgi_hide_header X-Powered-By;


      location = / {
        if ( $http_user_agent ~ ^DavClnt ) {
            return 302 /remote.php/webdav/$is_args$args;
        }
      }

      location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
      }
      location ^~ /.well-known {

        location = /.well-known/carddav { return 301 https://cloud.andreybondarenko.com/remote.php/dav/; }
        location = /.well-known/caldav  { return 301 https://cloud.andreybondarenko.com/remote.php/dav/; }

        location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
        location /.well-known/pki-validation    { try_files $uri $uri/ =404; }
        location = /.well-known/webfinger { return 301 https://cloud.andreybondarenko.com/index.php/.well-known/webfinger; }
        location = /.well-known/nodeinfo { return 301 https://cloud.andreybondarenko.com/index.php/.well-known/nodeinfo; }

        return 301 /index.php$request_uri;
      }

      location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/) { return 404; }
      location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) { return 404; }

      location ~ \.php(?:$|/) {
      # Required for legacy support
      #rewrite ^/(?!index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+|.+\/richdocumentscode\/proxy) /index.php$request_uri;
      fastcgi_split_path_info ^(.+?\.php)(/.*)$;
      set $path_info $fastcgi_path_info;
      try_files $fastcgi_script_name =404;
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param PATH_INFO $path_info;
      fastcgi_param HTTPS on;
      fastcgi_param modHeadersAvailable true;
      fastcgi_param front_controller_active true;
      fastcgi_pass nextcloud-php.nextcloud.svc.cluster.local:9000;
      fastcgi_intercept_errors on;
      fastcgi_request_buffering off;
      fastcgi_max_temp_file_size 0;
      }

    location ~ \.(?:css|js|svg|gif|png|jpg|ico|wasm|mjs|tflite|map)$ {
        try_files $uri /index.php$request_uri;
        add_header Cache-Control "public, max-age=15778463, $asset_immutable";
        access_log off;

        location ~ \.wasm$ {
            default_type application/wasm;
        }
        location ~ \.mjs$ {
            default_type text/javascript;
        }
    }

    location ~ \.woff2?$ {
        try_files $uri /index.php$request_uri;
        expires 7d;
        access_log off;
    }

    # Rule borrowed from `.htaccess`
    location /remote {
        return 301 /remote.php$request_uri;
    }

    location / {
      #      index index.php;
      try_files $uri $uri/ /index.php$request_uri;
      #try_files $uri /index.php$request_uri;
    }
    }
