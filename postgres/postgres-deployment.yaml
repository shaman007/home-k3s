apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: db
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      # Uncomment to use your Harbor cache
      # imagePullSecrets:
      #   - name: my-private-revistry
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
      initContainers:
        - name: volume-permissions
          image: busybox:1.36
          securityContext:
            runAsUser: 0
          command:
            - sh
            - -c
            - |
              set -eux
              mkdir -p /var/lib/postgresql/data /var/run/postgresql
              chown -R 999:999 /var/lib/postgresql/data
              chown -R 999:999 /var/run/postgresql
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: data
      containers:
        - name: postgres
          image: harbor.andreybondarenko.com/github/cloudnative-pg/postgis:17
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: tcp-postgres
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-password
                  key: password
            - name: POSTGRES_HOST
              value: "postgres-postgresql.db.svc.cluster.local"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DATABASE
              value: "ttrss"
            - name: PGDATA
              value: /var/lib/postgresql/data
          #args:
          #  - "-c max_connections=200"
          #  - "-c shared_buffers=512MB"
          #  - "-c wal_level=replica"
          #readinessProbe:
          #  exec:
          #    command: ["pg_isready","-U","$(POSTGRES_USER)"]
          #  initialDelaySeconds: 5
          #  periodSeconds: 5
          #livenessProbe:
          #  exec:
          #    command: ["pg_isready","-U","$(POSTGRES_USER)"]
          #  initialDelaySeconds: 30
          #  periodSeconds: 10
          #  failureThreshold: 6
          resources:
            requests:
              cpu: "200m"
              memory: "1Gi"
            limits:
              memory: "6Gi"
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: data
            - name: backup
              mountPath: /backup
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data-postgres-postgresql-0
        - name: backup
          persistentVolumeClaim:
            claimName: data-export
